<% 

    const excerptHtml = require('excerpt-html')
    const he = require('he')

    let hostname = htmlWebpackPlugin.options.hostname
    let baseURL = htmlWebpackPlugin.options.baseURL
    let itemViewModel=htmlWebpackPlugin.options.itemViewModel 
    let routablePages = htmlWebpackPlugin.options.routablePages
    let channelViewModel=htmlWebpackPlugin.options.channelViewModel 
    let marketplaces = htmlWebpackPlugin.options.marketplaces

    const link = (href) => {
        return `${baseURL + href}`
    }    

    let logo = link(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`)

    const absoluteLink = (href) => {
        return `${hostname + baseURL + href}`
    }   

    const escapeExcerpt = (excerpt) => {
        excerpt = excerptHtml(excerpt, { pruneLength: 500 })
        return he.encode(excerpt.toString())
    }

    const marketplaceAssetLink = (marketplace, tokenId) => {

        let link = marketplace.assetLink 
  
        //Replace contract if we find it 
        if (channelViewModel.channel.contractAddress) {
          link = link.replace("{contractId}", channelViewModel.channel.contractAddress)
        }
  
        if (tokenId) {
          link = link.replace("{tokenId}", tokenId)
  
        }
  
        return link
      }


%>


<!DOCTYPE html>
<html>

<head>
    <style>
    html {
        visibility: hidden;
        opacity: 0;
    }
    </style>

    <!-- Required meta tags-->
    <meta charset="utf-8">
    <meta name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui, viewport-fit=cover">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <!-- Color theme for statusbar -->
    <title><%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %></title>

    <meta property="og:title" content="<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="<%= itemViewModel.coverImage ? absoluteLink(`backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}`)  : '' %>" />
    <meta property="og:description" content="<%= escapeExcerpt(itemViewModel.contentHTML)%>" />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="" />
    <meta property="twitter:title" content="<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>" />
    <meta property="twitter:description" content="<%= escapeExcerpt(itemViewModel.contentHTML) %>" />
    <meta property="twitter:image" content="<%= itemViewModel.coverImage ? absoluteLink(`backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}`)  : '' %>" />

    <%= htmlWebpackPlugin.tags.headTags %>
    
</head>

<body>

    <div id="app">

        <div class="view view-main">

            <div class="page" data-name="token-<%=itemViewModel.item._id %>">

                <nav-bar
                    logo="<%=logo%>"
                    title="<%=channelViewModel.channel.title%>"
                >
                </nav-bar>

                <token-toolbar
                    token_id="<%= itemViewModel.item.tokenId %>"
                    item_count="<%= channelViewModel.channel.itemCount %>" 
                >
                </token-toolbar>

                
                <div class="fab fab-left-center color-white">
                    <a href="<%= itemViewModel.item.tokenId == 1 ? link(`index.html`) : link(`t/${itemViewModel.item.previous.tokenId}`) %>">
                        <i class="icon f7-icons color-blue">arrow_left</i>
                    </a>
                </div>
    
                <% if (itemViewModel.item.tokenId < channelViewModel.channel.itemCount) { %>
                    <div class="fab fab-right-center color-white">
                        <a href="<%= link(`t/${itemViewModel.item.next.tokenId}`) %>" data-transition="f7-cover">
                            <i class="icon f7-icons color-blue">arrow_right</i>
                        </a>
                    </div>
                <% } %>

                
                <div class="page-content">

                    <div class="row">

                        <div class="col-100 large-75">
                            
                            <div class="row">
                                <div class="card animation-card col-100">
                                    <div class="card-content">
                                        <div class="animation-content">
                                            <%=itemViewModel.animationContentHTML %>
                                        </div>
                                    </div>
                                </div> 
                            </div>


                            <% if (itemViewModel.item.next) { %>
                                <a class="button button-fill center continue-button margin-bottom" href="<%= link(`t/${itemViewModel.item.next.tokenId}`) %>" data-transition="f7-cover">
                                    Continue <i class="f7-icons">arrow_right</i>
                                </a>
                            <% } %>



                        </div>

                        <div class="col-100 large-25 token-sidebar">
                            
                            <% if (itemViewModel.channel.contractAddress) { %>
                                <nft-info id="<%= itemViewModel.item.tokenId %>" 
                                          owner="${owner}" 
                                          baseurl="<%= baseURL %>" 
                                          contract="<%= itemViewModel.channel.contractAddress %>">
                                </nft-info>
                            <% } %>


                            <% 
                            if (marketplaces?.length > 0) {
                            %>
                                <div class="card">
                                    <div class="card-header">
                                        View on Marketplaces
                                    </div>
                                    <div class="card-content">
                                        <div class="list simple-list">
                                            <ul>
                                            
                                            <% 
                                                for (let marketplace of marketplaces) { 
                                            %>  
                                                <li><a href="<%= marketplaceAssetLink(marketplace, itemViewModel.item.tokenId) %>" class="external"><%= marketplace.name %></a></li>     
                                            <%
                                                }
                                            %>
                        
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            <%
                                }
                            %>

                            <div class="card">
                                
                                <div class="card-header">
                                    Attributes
                                </div>

                                <div class="card-content data-table">
                    
                                    <% itemViewModel.attributeSelections?.map( (as)=> { %>
                                        <div class="button-outline attribute-value">
                                            <div class="trait-type"><%= as.traitType %></div>
                                            <div class="value"><%= as.value %></div>
                                            <div class="category-percent"><%= as.attributeTotal.categoryPercent %> have this trait</div>
                                        </div>
                                    <% }) %>

                                </div>

                            </div>

                            <div class="card">
                                <div class="card-header">Cover Image</div>
                                <div class="card-content">
                                    <img src="<%= link(`backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}`) %>" class="cover-image-preview" />
                                </div>
                            </div>

                        </div>

                    </div>

                </div>

            </div>
        </div>

    </div>

    <%= htmlWebpackPlugin.tags.bodyTags %>

    <script type="module" id="page-init-scripts">    

        const init = (props, { $, $f7, $h, $on, $update }) => {
            
            let tokenService = globalThis.container.get("TokenService")
            let readerSettingsService = globalThis.container.get("ReaderSettingsService")

            let baseURI = globalThis.container.get("baseURI")

            let owner

            $on('pageInit', async () => {

                await readerSettingsService.updateCurrentPage(parseInt(props.tokenId))

            })          

            $on('pageBeforeOut', async () => {
            })

            document.querySelector('meta[property="og:title"]').setAttribute("content", "<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>")
            document.querySelector('meta[property="og:url"]').setAttribute("content", "<%= link(`token-${itemViewModel.item._id}`) %>")
            document.querySelector('meta[property="og:image"]').setAttribute("content", "<%= itemViewModel.coverImage ? absoluteLink(`backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}`)  : '' %>")
            document.querySelector('meta[property="og:description"]').setAttribute("content", "<%= escapeExcerpt(itemViewModel.contentHTML)%>")

            document.querySelector('meta[property="twitter:url"]').setAttribute("content", "<%= link(`token-${itemViewModel.item._id}`) %>")
            document.querySelector('meta[property="twitter:title"]').setAttribute("content", "<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>")
            document.querySelector('meta[property="twitter:image"]').setAttribute("content", "<%= itemViewModel.coverImage ? absoluteLink(`backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}`)  : '' %>")
            document.querySelector('meta[property="twitter:description"]').setAttribute("content", "<%= escapeExcerpt(itemViewModel.contentHTML)%>" )

            document.querySelector('title').innerHTML = "<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>"

            $f7.preloader.hide()

            return $render;

        }


    </script>

    <script type="module" id="page-scripts">

      let routablePages = JSON.parse(`<%= JSON.stringify(routablePages) %>`)
      let app = reader.init('<%= baseURL %>', '<%= hostname %>', '<%= VERSION %>', routablePages )

    </script>

</body>

</html>